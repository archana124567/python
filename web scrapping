import requests
from bs4 import BeautifulSoup
import pandas
import argparse
import connect

parser=argparse.ArgumentParser()
parser.add_argument("--page_num_max",help="enter the number of page yo parse",type=int)
parser.add_argument("--dbname",help="enter the name of db",type=str)
args=parser.parse_args()

oyo_url="https://www.oyorooms.com/hotels-in-bangalore/?page="
page_num_MAX=args.page_num_max
scraped_info_list=[]

for page_num in range(page_num_MAX):
    url=oyo_url+str(page_num)
    print("get request for :"+)
    req=requests.get(oyo_url+str(page_num))
    content=req.content

    soup=BeautifulSoup(content,"html.parser")
    all_hotels = soup.find_all("div",{"class":"hotelCardListing"})

    for hotel in all_hotels:
        hotel_dict={}
        hotel_dict["name"]=hotel.find("h3",{"listingHotelDescription__hotelName"}).text
        hotel_dict["address"]=hotel.find("span",{"itemprop":"streetAddress"}).text
        hotel_dict["price"]=hotel.find("span",{"class":"listingPrice__finalPrice"}).text
        try:
            hotel_dict["rating"]=hotel.find("span",{"class":"hotelRating__ratingSummary"}).text
        except AttributeError:
            hotel_dict["rating"]=None

        parent_amenities_element=hotel.find("div",{"class":"amenityWrapper"})
        
        amenities_list=[]

        for amenity in parent_amenities_element.find_all("div",{"class":"amenityWrapper__amenity"}):
            amentities_list.append(amenity.find("span",{"class":"d-body-sm"}).text.strip())

        hotel_dict["amenities"]=', '.join(amenities_list[:-1])

        scraped_info_list.append(hotel_dict)
        connect.insert_into_table(args.dbname,tuple(hotel_dict.value()))

dataFrame=pandas.DataFrame(scraped_info_list)
print("creating csv file ...")
dataFrame.to_csv("Oyo.csv")
connect.get_hotel_info(args.dbname)









///////////part 2


import sqlite3



def connect(dbname):
    conn=sqlite3.connect(dbname)

    conn.execute("create table if not exists oyo_hotel(name text,address text, price int,amenities text,rating int)")

    print("table created successfully")

    conn.close()

def insert_into_table(dbname,values):
    conn=sqlite3.connect(dbname)
    print("inserted into table: "+str(values))
    insert_sql="insert into oyo_hotels(name,address,price,amenities,rating) values(?,?,?,?,?)"

    connect.execute(insert_sql,values)

    conn.commit()
    conn.close()

def get_hotel_info(dbname):
    conn=sqlite3.connect(dbname)

    cur=conn.cursor()

    cur.execute("select * from oyo_hotels")

    table_data=cur.fetchall()

    for record in table_data:
        print(record)

    conn.close()
